= turbo_frame_tag("approve_or_reject_card_#{index}", target: "_top") do
  .card.mb-3
    = card_header("file-earmark-person", link_to_camp(camp_interview), buttons: [camp_status_badge(camp_interview)])

    - if camp_interview.approved? && camp_interview.valid?
      .card-body
        .alert.alert-success Interview has been <b>approved</b>.
        p.card-text #{link_to_user(camp_interview.user)} will be notified of their approval.
        p.card-text <b>Thank you</b> for contribuiting to camp!
    - elsif camp_interview.rejected? && camp_interview.valid?
      .card-body
        .alert.alert-danger Interview has been <b>rejected</b>.
        p.card-text #{link_to_user(camp_interview.user)} will be notified of their rejection.
    - elsif camp_interview.no_response? && camp_interview.valid?
      .card-body
        .alert.alert-secondary Interview has been marked <b>no response</b>.
        p.card-text #{link_to_user(camp_interview.user)} will be notified.
    - elsif camp_interview.completed?
      .card-body
        .alert.alert-success Interview has been <b>completed</b>.
        p.card-text No further action is required.
    - else
      .card-table
        table.table
          tbody
            - if camp_interview.user.present?
              tr
                th User
                td = link_to_user(camp_interview.user)
            - if camp_interview.user&.camp_application.present?
              tr
                th Application
                td
                  = link_to_camp(camp_interview.user.camp_application)
                  =< camp_status_badge(camp_interview.user.camp_application)
            - if camp_interview.assigned_by.present?
              tr
                th Assigned by
                td = link_to_user(camp_interview.assigned_by)
            - if camp_interview.initial_notes.present?
              tr
                th Initial notes
                td = camp_interview.initial_notes
      .card-body
        = render "shared/error_messages", resource: camp_interview
        = simple_form_for(camp_interview, namespace: "form_#{index}", url: approve_or_reject_camp_interview_path(camp_interview)) do |f|
            = f.input :index, input_html: { value: index }, as: :hidden
            .row
              .col.mb-3
                = f.input :feedback_notes, hint: "sent to the user by email"
            .row
              .col.mb-3
                = f.input :private_notes, hint: "only visible to camp leadership, what did you think of them"
            .row
              .col.mb-3
                = f.input :action, as: :radio_buttons, hint: "decide if this person should camp with us", checked: camp_interview.status, collection: [[yes_badge("Approve"), "approved"], [no_badge("Reject"), "rejected"], [secondary_badge("No response"), "no_response"]]
            .row
              .col.d-grid
                = f.button :submit, "Submit", class: "btn-primary-override"
